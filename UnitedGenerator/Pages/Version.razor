@page "/version"
@inject HttpClient Http
@using UnitedGenerator.Data;

<PageTitle>Version</PageTitle>

<h1>Version</h1>
<p>This allows you to validate the version you are using, auto updating of the app can take a very long time and on some platform it does not seem to happen at all!</p>
<p>Please restart the application or re-open the browser tab TWICE, to ensure you have the latest version.</p>
<p>On iOS it is not sufficient to minimize the app, is must be closed by swiping up, and you need to do it TWICE! (and sometimes more)</p>

<h4 class="m-5">
    Current version: 
    @System.Reflection.Assembly.GetExecutingAssembly().GetName().Version
</h4>

<h2>Version History</h2>
<p>
    The list below is LIVE updated everytime you view this page, if the latest version on the list does not match your version, please restart some more!
</p>

<div class="row">
    <div class="alert alert-info" role="alert">
        @if (releases == null)
        {
            <p>Loading...</p>
        }
        else
        {
            @foreach (var release in releases)
            {
                <p>
                    @release.Version<br />
                    @release.Comment
                </p>
            }
        }
    </div>
</div>

<p>@updated</p>

@code {
    private Release[]? releases;
    private string? updated;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            releases = await Http.GetFromJsonAsync<Release[]>("releases.json");
            updated = $"List updated at {DateTime.Now}";
        }
        catch (Exception)
        { }
    }

    public class Release
    {
        public string? Version { get; set; }
        public string? Comment { get; set; }
    }
}