@page "/"
@using UnitedGenerator.Data;
@using UnitedGenerator.Engine;
@using UnitedGenerator.Engine.Models;

<PageTitle>United Generator</PageTitle>

<div class="alert alert-warning" role="alert">
    This is a work-in-progress system, no effort has been put into the UI only into the data and generation logic.
</div>

<h4>Setup</h4>
Number of Heroes: 
<input @bind="playerCount" min="2" max="6" type="number" style="text-align:right;" />

<div class="row">
    <div class="card col-12 col-xl-6">
        <div class="card-body">
            <h5 class="card-title">Preferences</h5>
            <h6 class="card-subtitle mb-2 text-muted">Adjust how likely you want different features to appear.</h6>

            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">Select a Team Probability</span>
                </div>
                <input @bind="selectTeamProbability" min="0" max="100" type="number" class="form-control" style="text-align:right;" />
                <div class="input-group-append">
                    <span class="input-group-text">%</span>
                </div>
            </div>

            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">Select a Challenge Probability</span>
                </div>
                <input @bind="selectChallengeProbability" min="0" max="100" type="number" class="form-control" style="text-align:right;" />
                <div class="input-group-append">
                    <span class="input-group-text">%</span>
                </div>
            </div>
        </div>
    </div>

    <div class="card col-12 col-xl-6">
        <div class="card-body">
            <h5 class="card-title">Demo/Test Settings</h5>
            <h6 class="card-subtitle mb-2 text-muted">Theese settings are mostly used for test and demo purporses, but feel free to play around with them.</h6>

            <div class="form-check form-switch">
                <input class="form-check-input" @bind="onlyUseTeamVillains" type="checkbox" id="teamVillains" />
                <label class="form-check-label" for="teamVillains">Only include team villains</label>
            </div>

            <div class="form-check form-switch">
                <input class="form-check-input" @bind="onlyUsePreGameVillains" type="checkbox" id="preGameVillains" />
                <label class="form-check-label" for="preGameVillains">Only include villains with multiple games</label>
            </div>

            <div class="form-check form-switch">
                <input class="form-check-input" @bind="onlyUseAntiHeroes" type="checkbox" id="onlyAntiheroes" />
                <label class="form-check-label" for="onlyAntiheroes">Only include Anti Heroes</label>
            </div>

            <div class="form-check form-switch">
                <input class="form-check-input" @bind="onlyUseHazardousChallenge" type="checkbox" id="onlyUseHazardousChallenge" />
                <label class="form-check-label" for="onlyUseHazardousChallenge">Only use Hazardous Location Challenge</label>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="btn-group" role="group" aria-label="Basic example">
        <button class="btn btn-primary" @onclick="() => GenerateGame(false)">Generate Normal Game</button>
        <button class="btn btn-primary" @onclick="() => GenerateGame(true)">Generate Team vs Team Game</button>
    </div>
</div>

@if(games.Length == 0 && generated)
{
    <div>No Data!</div>
}

@foreach(var game in games)
{
    <h1>@game.Title</h1>

    <h2>Villain</h2>
    <div>@game.Villain.Name @(game.Villain.IsAntiHero ? "[Anti-Hero]" : "") (@game.Villain.Box.Name - Season @game.Villain.Season.Number)</div>
    
    @if (game.Villain.IsVillainTeam)
    {
        <ul>
            @foreach (var villain in game.Villain.SubVillains)
            {
                <li>@villain.Name @(villain.IsAntiHero ? "[Anti-Hero]" : "") (@villain.Box.Name - Season @villain.Season.Number)</li>
            }
        </ul>
    }

    <h3>Challenge</h3>
    @if (game.Challenge != null)
    {
        <div>@game.Challenge.Name (@game.Challenge.Box.Name - Season @game.Challenge.Season.Number)</div>
    }
    else
    {
        <div>(None)</div>
    }

    @foreach (var group in game.HeroGroups)
    {
        <h2>@group.Name</h2>

        @if (group.Team != null)
        {
            <div>Team: @group.Team.Name (@group.Team.TeamType)</div>
        }

        <ol>
            @foreach (var hero in group.Heroes)
            {
                <li>@hero.Name @(hero.IsAntiHero ? "[Anti-Hero]" : "") (@hero.Box.Name - Season @hero.Season.Number)</li>
            }
        </ol>
    }

    <h2>Locations</h2>
    <ol>
        @foreach (var location in game.Locations)
        {
            <li>
                @location.Name 
                @(location.Hazardous ? "[Hazardous]" : "")
                @(location.HasCustomRules ? "[Custom rules in rulebook]" : "")
                (@location.Box.Name - Season @location.Season.Number)
            </li>
        }
    </ol>
}

@code {
    private readonly GameRandomizer random = new GameRandomizer();

    private GameSetup[] games = new GameSetup[0];

    private int playerCount = 4;
    private int selectTeamProbability = 5;
    private int selectChallengeProbability = 20;
    private bool onlyUseTeamVillains = false;
    private bool onlyUsePreGameVillains = false;
    private bool onlyUseAntiHeroes = false;
    private bool onlyUseHazardousChallenge = false;
    private bool generated = false;

    private void GenerateGame(bool teamMode)
    {
        games = random.Generate(new GenerationConfiguration(playerCount)
            {
                TeamVsTeamMode = teamMode,
                SelectTeamProbability = selectTeamProbability,
                SelectChallengeProbability = selectChallengeProbability,
                OnlyVillainTeams = onlyUseTeamVillains,
                OnlyVillainsWithPreGames = onlyUsePreGameVillains,
                OnlyUseAntiHeroes = onlyUseAntiHeroes,
                OnlyHazardousLocationsChallenge = onlyUseHazardousChallenge
            });

        generated = true;
    }
}
