@page "/counter"
@using UnitedGenerator.Data;
@using UnitedGenerator.Engine;

<PageTitle>Counter</PageTitle>

<button class="btn btn-primary" @onclick="GenerateGame">Generate Game</button>
<button class="btn btn-primary" @onclick="GenerateMultiVillainGame">Generate Multi Villain Game</button>
<button class="btn btn-primary" @onclick="GeneratePreGameVillainGame">Generate Pre-Game Villain Game</button>
<button class="btn btn-primary" @onclick="GenerateAntiHeroGame">Generate Anti-Hero Only Game</button>
<button class="btn btn-primary" @onclick="GenerateGameWithHazardousChallenge">Generate Game with Hazardous Challenge</button>
<button class="btn btn-primary" @onclick="GenerateGameWithHeroTeam">Generate Game with Hero Team</button>

@foreach(var game in games)
{
    <h1>@game.Title</h1>

    <h2>Villain</h2>
    <div>@game.Villain.Name @(game.Villain.IsAntiHero ? "[Anti-Hero]" : "") (@game.Villain.Box.Name - Season @game.Villain.Season.Number)</div>
    
    @if (game.Villain.HasCustomRules)
    {
        <div>Note: Has Custom Rules!</div>
    }

    @if (game.Villain.IsMultiVillain)
    {
        <ul>
            @foreach (var villain in game.Villain.SubVillains)
            {
                <li>@villain.Name @(villain.IsAntiHero ? "[Anti-Hero]" : "") (@villain.Box.Name - Season @villain.Season.Number)</li>
            }
        </ul>
    }

    <h3>Challenge</h3>
    @if (game.Challenge != null)
    {
        <div>@game.Challenge.Name (@game.Challenge.Box.Name - Season @game.Challenge.Season.Number)</div>
    }
    else
    {
        <div>(None)</div>
    }

    @foreach (var group in game.HeroGroups)
    {
        <h2>@group.Name</h2>

        @if (group.Team != null)
        {
            <div>Team: @group.Team.Name (@group.Team.TeamType)</div>
        }

        <ol>
            @foreach (var hero in group.Heroes)
            {
                <li>@hero.Name @(hero.IsAntiHero ? "[Anti-Hero]" : "") (@hero.Box.Name - Season @hero.Season.Number)</li>
            }
        </ol>
    }

    <h2>Locations</h2>
    <ol>
        @foreach (var location in game.Locations)
        {
            <li>
                @location.Name 
                @(location.Hazardous ? "[Hazardous]" : "")
                @(location.HasCustomRules ? "[Custom Rules]" : "")
                (@location.Box.Name - Season @location.Season.Number)
            </li>
        }
    </ol>
}

@code {
    private readonly GameRandomizer random = new GameRandomizer();

    private GameSetup[] games = new GameSetup[0];
    private int playerCount = 4;
    private int teamPercent = 2;
    private int challengePercent = 20;

    private void GenerateGame()
    {
        games = random.Generate(playerCount, teamPercent, challengePercent);
    }

    private void GenerateMultiVillainGame()
    {
        games = random.Generate(playerCount, teamPercent, challengePercent, onlyMultiVillains: true);
    }

    private void GeneratePreGameVillainGame()
    {
        games = random.Generate(playerCount, teamPercent, challengePercent, onlyPreGameVillains: true);
    }

    private void GenerateAntiHeroGame()
    {
        games = random.Generate(playerCount, teamPercent, challengePercent, onlyAntiHeroes: true);
    }

    private void GenerateGameWithHazardousChallenge()
    {
        games = random.Generate(playerCount, teamPercent, challengePercent, hazardousChallenge: true);
    }

    private void GenerateGameWithHeroTeam()
    {
        games = random.Generate(playerCount, 100, challengePercent);
    }
}
